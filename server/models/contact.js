// Generated by CoffeeScript 1.6.3
var Contact, ContactLog, americano;

americano = require('americano-cozy');

ContactLog = require('./contact_log');

module.exports = Contact = americano.getModel('Contact', {
  id: String,
  fn: String,
  n: String,
  datapoints: function(x) {
    return x;
  },
  note: String,
  tags: function(x) {
    return x;
  },
  _attachments: Object
});

Contact.prototype.remoteKeys = function() {
  var dp, model, out, _i, _len, _ref;
  model = this.toJSON();
  out = [this.id];
  _ref = model.datapoints;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    dp = _ref[_i];
    if (dp.name === 'tel') {
      out.push(ContactLog.normalizeNumber(dp.value));
    } else if (dp.name === 'email') {
      out.push(dp.value.toLowerCase());
    }
  }
  return out;
};

Contact.prototype.toVCF = function() {
  var dp, i, key, model, out, type, value, _ref;
  model = this.toJSON();
  out = "BEGIN:VCARD\n";
  out += "VERSION:3.0\n";
  if (model.note) {
    out += "NOTE:" + model.note + "\n";
  }
  if (model.fn) {
    out += "FN:" + model.fn + "\n";
  }
  if (model.n) {
    out += "N:" + model.n + "\n";
  }
  _ref = model.datapoints;
  for (i in _ref) {
    dp = _ref[i];
    value = dp.value;
    switch (dp.name) {
      case 'about':
        if (dp.type === 'org' || dp.type === 'title') {
          out += "" + (dp.type.toUpperCase()) + ":" + value + "\n";
        } else {
          out += "X-" + (dp.type.toUpperCase()) + ":" + value + "\n";
        }
        break;
      case 'other':
        out += "X-" + (dp.type.toUpperCase()) + ":" + value + "\n";
        break;
      default:
        key = dp.name.toUpperCase();
        if (key === 'ADR') {
          value = value.replace(/(\r\n|\n\r|\r|\n)/g, ";");
        }
        type = "TYPE=" + (dp.type.toUpperCase());
        out += "" + key + ";" + type + ":" + value + "\n";
    }
  }
  return out += "END:VCARD\n";
};
