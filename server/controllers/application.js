// Generated by CoffeeScript 1.6.3
var Config, Contact, async, getImports, i18n;

Contact = require('../models/contact');

Config = require('../models/config');

i18n = require('cozy-i18n-helper');

async = require('async');

getImports = function(callback) {
  return async.parallel([
    function(cb) {
      return Contact.request('all', cb);
    }, function(cb) {
      return Config.getInstance(cb);
    }, function(cb) {
      return i18n.getLocale(null, cb);
    }
  ], function(err, results) {
    var config, contacts, locale;
    contacts = results[0], config = results[1], locale = results[2];
    return callback(null, "window.config = " + (JSON.stringify(config)) + ";\nwindow.locale = \"" + locale + "\";\nwindow.initcontacts = " + (JSON.stringify(contacts)) + ";");
  });
};

module.exports = {
  index: function(req, res) {
    return getImports(function(err, imports) {
      if (err) {
        return res.error(500, 'An error occured', err);
      }
      return res.render('index.jade', {
        imports: imports
      });
    });
  },
  widget: function(req, res) {
    return getImports(function(err, imports) {
      if (err) {
        return res.error(500, 'An error occured', err);
      }
      return res.render('widget.jade', {
        imports: imports
      });
    });
  },
  setConfig: function(req, res) {
    return Config.set(req.body, function(err, config) {
      if (err) {
        return res.error(500, 'An error occured', err);
      }
      return res.send(config);
    });
  }
};
